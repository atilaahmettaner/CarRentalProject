<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        1jtgZXkAAAAASUVORK5CYII=
</value>
  </data>
</root>